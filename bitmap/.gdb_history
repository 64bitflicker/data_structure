b main
r
n
q
b main
r
s
p bit_map
n
p bit_map
n
p bit_map
p sizeof(bit_map_t)
p bit_map
p bit_map->map
p bit_map->
p bit_map->row_size
n
n
p Bit_line 
p bit_map->line_size 
p bit_map->line_size / sizeof(char)
p bit_map->line_size / sizeof(char) +  (bit_map->line_size % sizeof(char) != 0) ? 1 : 0
p bit_map->line_size / (sizeof(char) * 8) +  (bit_map->line_size % (sizeof(char) * 8) != 0) ? 1 : 0
p bit_map->line_size / (sizeof(char) * 8)
p bit_map->line_size % (sizeof(char) * 8)
p bit_map->line_size % (sizeof(char) * 8) != 0
p bit_map->line_size % (sizeof(char) * 8) != 0 ? 1 : 0
p bit_map->line_size % (sizeof(char) * 8) != 0 ? 1 : 0
p bit_map->line_size % (sizeof(char) * 8) != 4 ? 1 : 0
p bit_map->line_size % (sizeof(char) * 8) != 0 ? 1 : 0
p bit_map->line_size / (sizeof(char) * 8) +  bit_map->line_size % (sizeof(char) * 8) != 0 ? 1 : 0
p bit_map->line_size / (sizeof(char) * 8) +  (bit_map->line_size % (sizeof(char) * 8) != 0 ? 1 : 0)
p bit_map->line_size / (sizeof(char) * 8) +  (bit_map->line_size % (sizeof(char) * 8) != 0 ? 1 : 0)
q
b main
r
s
n
n
p Bit_line * bit_map->row_size
p 13 * 50
p 13 * 50 * 8
p 100 * 50
p bit_map->map
n
q
bin main
r
s
b main
r
s
n
s
r
n
s
n
q
b main
r
n
bt
q
r
bt
p bit_map
p bit_map->map
p bit_map->map[i]
p bit_map->map[1]
p bit_map->map[0]
p bit_map->map[0][0]
p bit_map->map[0][0]
q
r
bt
p bit_map->map[0][0]
p bit_map->map[0]
q
r
bt
q
b main
r
s
n
p map[0]
p map[1]
n
p i
n
p bit_map->map[0]
p bit_map->real_line
x/x bit_map->map[0]
x/10x bit_map->map[0]
n
x/10x bit_map->map[1]
x/2x bit_map->map[1]
x/2x bit_map->map[0]
x/2x bit_map->map[2]
n
n
n
x/2x bit_map->map[2]
n
q
b main
r
s
n
n
bt
q
